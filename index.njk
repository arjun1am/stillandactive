<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Still & Active</title>
  <link rel="stylesheet" href="/style.css">

</head>
<body>
  <div class="update">last updated:<span class="highlight">Aug 31, 2025</span></div>
  <div class="stats">EXP:<span class="highlight neg">💎-6720</span> Rank:<span class="highlight">🪱Parasite</span></div>

  <div class="container">
    <header>
      <h1>What if life was like a 🎮 video game? Welcome to Still & Active, a self improvement blog documenting my journey taking on various 📜 quests, writing 🖋️ journal notes, and building 🏔️ daily habits. As I progress, I earn 💎 EXP and level up my 🔰 rank and stats. <a href="/posts/The System">Explore the system</a></h1>

      <!-- Tag Filters -->
      <nav class="tag-filters">
        <div class="filter-group">
          <span class="filter-label">Type:</span>
          <button class="tag-btn active" data-tag="all">All,</button>
          <button class="tag-btn" data-tag="quest">Quests,</button>
          <button class="tag-btn" data-tag="journal">Journal Entries</button> 
        </div>
        
        <div class="filter-group">
          <span class="filter-label">Status:</span>
          <button class="tag-btn" data-tag="in-progress">In Progress,</button>
          <button class="tag-btn" data-tag="done">Done,</button>
          <button class="tag-btn" data-tag="todo">To Do</button> 
        </div>
<!--         
        <div class="filter-group">
          <span class="filter-label">Health:</span>
          <button class="tag-btn" data-tag="physical">Physical,</button>
          <button class="tag-btn" data-tag="mental">Mental,</button>
          <button class="tag-btn" data-tag="social">Social,</button>
          <button class="tag-btn" data-tag="spiritual">Spiritual,</button>
          <button class="tag-btn" data-tag="professional">Professional,</button>
          <button class="tag-btn" data-tag="financial">Financial</button>
        </div>
        
        <div class="filter-group">
          <span class="filter-label">Level:</span>
          <button class="tag-btn" data-tag="level-1">Level 1,</button>
          <button class="tag-btn" data-tag="level-2">Level 2,</button>
          <button class="tag-btn" data-tag="level-3">Level 3,</button>
          <button class="tag-btn" data-tag="level-4">Level 4,</button>
          <button class="tag-btn" data-tag="level-5">Level 5</button>
        </div> -->
      </nav>
    </header> 
    
    <main>
      <ul class="post-list">
        {% for post in collections.posts | reverse %}
          <li class="post-item" 
              data-type="{{ post.data.type }}" 
              data-status="{{ post.data.status }}"
              data-health="{{ post.data.health }}"
              data-level="level-{{ post.data.level }}">
            <div class="post-header">
              <a href="{{ post.url }}">{{ post.data.title }}</a>
              <time>{{ post.data.date | dateDisplay }}</time>
            </div>
            <div class="post-tags">
              {% if post.data.type %}
                <span class="tag tag-{{ post.data.type }}">{{ post.data.type }}</span>
              {% endif %}
              {% if post.data.status %}
                <span class="tag tag-{{ post.data.status }}">{{ post.data.status }}</span>
              {% endif %}
              {% if post.data.health %}
                <span class="tag tag-{{ post.data.health }}">{{ post.data.health }}</span>
              {% endif %}
              {% if post.data.level %}
                <span class="tag tag-level">Lvl: {{ post.data.level }}</span>
              {% endif %}
            </div>
          </li>
        {% endfor %}
      </ul>
    </main>
  </div>

  <script>
    // Tag filtering functionality
    document.addEventListener('DOMContentLoaded', function() {
      const buttons = document.querySelectorAll('.tag-btn');
      const posts = document.querySelectorAll('.post-item');

      buttons.forEach(button => {
        button.addEventListener('click', function() {
          // Update active button
          buttons.forEach(btn => btn.classList.remove('active'));
          this.classList.add('active');

          const tag = this.getAttribute('data-tag');

          // Show/hide posts
          posts.forEach(post => {
            if (tag === 'all') {
              post.style.display = 'block';
            } else {
              const postType = post.getAttribute('data-type');
              const postStatus = post.getAttribute('data-status');
              const postHealth = post.getAttribute('data-health');
              const postLevel = post.getAttribute('data-level');
              
              if (tag === postType || tag === postStatus || tag === postHealth || tag === postLevel) {
                post.style.display = 'block';
              } else {
                post.style.display = 'none';
              }
            }
          });
        });
      });
    });

    // Make entire post item clickable
const postItems = document.querySelectorAll('.post-item');
postItems.forEach(item => {
  item.addEventListener('click', function() {
    const link = this.querySelector('a');
    if (link) {
      window.location.href = link.href;
    }
  });
  
  // Re-enable pointer events for the link
  const link = item.querySelector('a');
  if (link) {
    link.style.pointerEvents = 'auto';
  }
});
  </script> 

</body>
</html>